{
  "title": "비타로의 파티",
  "description": " <div class=\"headline\"> <h2>문제</h2> </div> <div id=\"problem_description\" class=\"problem-text\"> <p>$1$부터 $N$까지 높이에 대한 내림차순으로 번호가 매겨진 $N$개의 마을들이 있습니다. 각 마을의 높이는 서로 다릅니다. $M$개의 운하는 서로 다른 마을을 단방향으로 연결합니다. $i$번째 운하($1\\le i\\le M$)는 상대적으로 높은 마을 $S_i$에서 낮은 마을 $E_i$로 흐릅니다. 운하를 거꾸로 거슬러 이동할 수는 없습니다.</p> <p>비버 비타로의 $N$명의 친구들은 $N$개의 마을들에 각자 살고 있습니다.</p> <p>비타로는 $Q$번의 파티를 열며, 친구들을 초대할 것입니다. $j$번째 파티($1\\le j\\le Q$)에는 $Y_j$명의 친구들이 바빠서 불참합니다. $j$번째 파티는 마을 $T_j$에서 열리므로 마을 $T_j$에 갈 수 없는 친구들도 불참합니다. 이 두 경우가 아닌 친구들만 파티에 참석합니다.</p> <p>각각의 친구들은 운하들로 이루어진 경로를 통해 파티가 열리는 마을에 옵니다. 그 경로는 여러가지가 될 수 있습니다. 하지만 비타로의 친구들은 운하를 좋아하므로 가장 많은 운하가 있는 경로 중에서 하나를 통해 옵니다.</p> <p>비타로는 가장 많은 운하를 사용한 친구가 얼마나 많은 운하를 사용하는지 궁금해합니다.</p> <p>파티에 열리는 $N$개의 마을들과 $Q$번의 파티에 대한 바쁜 친구들의 목록을 고려해 가장 많은 수의 운하를 사용하는 친구가 얼마나 많은 운하를 사용하는지 계산하는 프로그램을 작성해 주십시오.</p> </div> ",
  "input": " <div class=\"headline\"> <h2>입력</h2> </div> <div id=\"problem_input\" class=\"problem-text\"> <p>표준 입력으로 다음 데이터들이 주어집니다.</p> <ul> <li>첫번째 줄에 $N$, $M$, $Q$가 공백으로 나뉘어 주어집니다. 각각 마을의 개수 $N$과 운하의 개수 $M$, 파티의 횟수 $Q$를 의미합니다.</li> <li>$M$개의 줄에 걸쳐 들어오는 각 $i$번째 줄($1\\le i\\le M$)에 $S_i$와 $E_i$가 주어집니다. 이는 운하가 마을 $S_i$에서 마을 $E_i$으로 흐름을 의미합니다.</li> <li>$Q$개의 줄에 걸쳐 들어오는 각 $j$번째 줄($1\\le j\\le Q$)에 $T_j, Y_j, C_{j,1}, C_{j,2},\\ldots, C_{j,Y_j}$가 주어집니다. 이는 $T_j$에서 열리는 $j$번째 파티에 친구들 $C_{j,1}, C_{j,2},\\ldots, C_{j,Y_j}$가 바빠서 불참한다는 의미입니다.</li> </ul> </div> ",
  "output": " <div class=\"headline\"> <h2>출력</h2> </div> <div id=\"problem_output\" class=\"problem-text\"> <p>$Q$개의 각 $j$번째 줄($1\\le j\\le Q$)에 가장 많은 운하를 사용한 친구가 사용한 운하의 개수를 출력합니다. 만약 아무도 참석하지 못한다면 그 줄에는 <code>-1</code>을 출력합니다.</p> </div> ",
  "limit": " <div class=\"headline\"> <h2>제한</h2> </div> <div id=\"problem_limit\" class=\"problem-text\"> <ul> <li>$1\\le N, Q\\le 100\\ 000$.</li> <li>$0\\le M\\le 200\\ 000$.</li> <li>$1\\le S_i &lt; E_i\\le N$ ($1\\le i\\le M$).</li> <li>$(S_i,E_i)\\neq (S_j,E_j)$ ($1 &le; i &lt; j &le; M$).</li> <li>$1 &le; T_j &le; N$ ($1 &le; j &le; Q$).</li> <li>$0 &le; Y_j &le; N$ ($1 &le; j &le; Q$).</li> <li>$1 &le; C_{j,1} &lt; C_{j,2} &lt;\\cdots &lt; C_{j,Y_j} &le; N$ ($1 &le; j &le; Q$).</li> <li>$Y_1+Y_2+\\cdots+Y_Q &le; 100\\ 000$.</li> </ul> </div> ",
  "subtask": "<div class=\"headline\"><h2>서브태스크</h2></div><div id=\"problem_subtask\" class=\"problem-text\"><div class=\"table-responsive\"><table class=\"table table-bordered td-middle subtask-table\" style=\"width: 100%;\"><thead><th style=\"width: 5%;\">번호</th><th style=\"width: 5%;\">배점</th><th style=\"width: 90%;\">제한</th></thead><tbody><tr data-subtask-id=\"1\"><td>1</td><td>7</td><td class=\"subtask-body\"><p>$N &le; 1\\ 000,\\ M &le; 2\\ 000,\\ Q = 1$.</p> </td></tr><tr data-subtask-id=\"2\"><td>2</td><td>7</td><td class=\"subtask-body\"><p>$Q = 1$.</p> </td></tr><tr data-subtask-id=\"3\"><td>3</td><td>86</td><td class=\"subtask-body\"><p>추가적인 제약 조건이 없습니다.</p> </td></tr></tbody></table></div></div>",
  "sample_explain_1": " <div id=\"problem_sample_explain_1\" class=\"problem-text\"> <p>첫 번째 파티에 참석하는 친구들은 마을 $2$, $3$, $4$에 사는 친구들입니다. 이 중 마을 $2$, $3$에 사는 친구들은 최대 한 개의 운하를 통해 파티가 열리는 마을 $4$로 갈 수 있습니다. 따라서 $1$을 출력합니다.</p> <p>두 번째 파티에 참석하는 친구들은 마을 $1$, $4$, $5$에 사는 친구들입니다. 이 중 1번 마을에 사는 친구가 최대 세 개의 운하를 통해 파티가 열리는 마을 $5$로 갈 수 있습니다. 따라서 $3$을 출력합니다.</p> <p>세 번째 파티에는 마을 $2$에 사는 친구만이 참석합니다. 파티가 열리는 마을 $2$까지 이용할 수 있는 운하가 없으므로 $0$을 출력합니다.</p> </div>"
}